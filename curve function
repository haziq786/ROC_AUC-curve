import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder 
from sklearn.model_selection import train_test_split as tts
from sklearn.ensemble import RandomForestClassifier as rfc
from sklearn.metrics import accuracy_score as acc
from sklearn.metrics import roc_curve,auc
from sklearn.metrics import roc_auc_score as rau
import matplotlib.pyplot as plt
def RF(X,Y,x,y):
    global rf
    rf=rfc(n_estimators=15, random_state=20, max_depth=53)
    rf.fit(X,Y)
    yp=rf.predict(x)
    y1=enc(y)
    yp1=enc(yp)
    fpr, tpr, thresholds = roc_curve(y1,yp1)
    roc_auc = auc(fpr, tpr)
    return(fpr,ftr,thresholds,roc_auc) 
def enc(c):
    l=[]
    c=pd.Series(c)
    for i in range(0,len(c)):
        if c.iloc[i]=="X":  #here X stands for the existing label that we want to convert. Put here the name of the label you eant to convert.
            l.append(1)
        elif c.iloc[i]=="Y": #here Y stands for the second label that we want to convert. Put here the name of the label you eant to convert.
            l.append(0)
    return(l)
def rouc(test_size,random_state): #Final function to be used for plotting roc_auc curve
   df=pd.read_csv("Filename.csv"); #Put here the name of the file
   x1=df.iloc[:,:-1]
   y1=df.iloc[:,-1]
   X,x,Y,y=tts(x1,y1,test_size=t,random_state=r)
   f1,t1,s1,_=RF(X,Y,x,y)
   plt.plot(f1, t1, lw = 3, label = 'Random forest: {:.2f}'.format(s1))
   plt.plot([0, 1], [0, 1],linestyle = '--',\n",color = (0.6, 0.6, 0.6),\n",label = 'random guessing')
   plt.plot([0, 0, 1], [0, 1, 1],\n"c,linestyle = ':',\n",color = 'black')\n",
   plt.xlim([-0.05, 1.05])\n",
   plt.ylim([-0.05, 1.05])\n",
   plt.xlabel('false positive rate')\n",
   plt.ylabel('true positive rate')\n",
   plt.title('Receiver Operator Characteristic')\n",
   plt.legend(loc = \"lower right\")\n",
   plt.tight_layout()\n",
   plt.show()
